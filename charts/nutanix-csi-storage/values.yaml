# Default values for nutanix-csi-storage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# parameters

# Legacy mode
#
# if legacy set to true we keep the old reverse domain notation for CSI driver name (com.nutanix.csi).
# need to be set to true only if upgrade and initialy installed with helm package before 2.2.x
legacy: false

# Openshift settings
#

openshift:
  scc: false
  masterIscsiConfig: false
  workerIscsiConfig: false

# kubeletDir allows overriding the host location of kubelet's internal state.
kubeletDir: "/var/lib/kubelet"

# Global Settings for all pods

nodeSelector: {}
tolerations: []
imagePullPolicy: IfNotPresent

# Storage Class settings
#
# choose for which mode (Volume, File, Dynamic File) storageclass need to be created
volumeClass: false
volumeClassName: "nutanix-volume"
volumeClassRetention: "Delete"
# volumeClassDescription: ""

fileClass: false
fileClassName: "nutanix-file"
fileClassRetention: "Delete"

dynamicFileClass: false
dynamicFileClassName: "nutanix-dynamicfile"
dynamicFileClassRetention: "Delete"
# dynamicFileClassDescription: ""

# Default Storage Class settings
#
# Decide wich storageclass will be the default
# value are: node, volume, file, dynfile
defaultStorageClass: none

# Nutanix Prism Elements settings
#
# Allow dynamic creation of Volumes and Fileshare
# needed if volumeClass or dynamicFileClass is set to true

prismEndPoint: 10.0.0.1

username: admin
password: nutanix/4u

secretName: ntnx-secret

# Nutanix Prism Elements Existing Secret
#
# if set to false a new secret will not be created
createSecret: true


# Volumes Settings
#
storageContainer: default
fsType: xfs

lvmVolume: false
lvmDisks: 4

networkSegmentation: false

# Files Settings
#
fileHost: 10.0.0.3
filePath: share

# Dynamic Files Settings
#
fileServerName: file

# Squash-type for dynamic files.
# Values are: none, root-squash, all-squash. Default is root-squash
dynamicFileSquashType: root-squash

# Volume metrics and CSI operations metrics configuration
#

servicemonitor:
  enabled: false
  labels:
    # This should match the serviceMonitorSelector logic configured
    # on the prometheus.
    k8s-app: csi-driver


# Pod pecific Settings
#

controller:
  replicas: 2
  image: quay.io/karbon/ntnx-csi:v2.6.0
  nodeSelector: {}
  tolerations: []

node:
  image: quay.io/karbon/ntnx-csi:v2.6.0
  nodeSelector: {}
  tolerations: []

sidecars:
  registrar:
    image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
  provisioner:
    image: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
    imageLegacy: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.2
  snapshotter:
    image: k8s.gcr.io/sig-storage/csi-snapshotter:v6.0.1
    imageBeta: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
  resizer:
    image: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0
  livenessprobe:
    image: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0


# Used for deployment test in kind cluster
#

kindtest: false
